//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nostralogia2._1.NostraDataServ {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyWord", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class KeyWord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDKWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyWordDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferenceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDKW {
            get {
                return this.IDKWField;
            }
            set {
                if ((this.IDKWField.Equals(value) != true)) {
                    this.IDKWField = value;
                    this.RaisePropertyChanged("IDKW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyWordDescription {
            get {
                return this.KeyWordDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyWordDescriptionField, value) != true)) {
                    this.KeyWordDescriptionField = value;
                    this.RaisePropertyChanged("KeyWordDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferenceID {
            get {
                return this.ReferenceIDField;
            }
            set {
                if ((this.ReferenceIDField.Equals(value) != true)) {
                    this.ReferenceIDField = value;
                    this.RaisePropertyChanged("ReferenceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListItemLocalized", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ListItemLocalized : Nostralogia2._1.NostraDataServ.LocalizationBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalizationBase", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Nostralogia2._1.NostraDataServ.ListItemLocalized))]
    public partial class LocalizationBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PicturesData", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class PicturesData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryData {
            get {
                return this.CategoryDataField;
            }
            set {
                if ((this.CategoryDataField.Equals(value) != true)) {
                    this.CategoryDataField = value;
                    this.RaisePropertyChanged("CategoryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDPicture {
            get {
                return this.IDPictureField;
            }
            set {
                if ((this.IDPictureField.Equals(value) != true)) {
                    this.IDPictureField = value;
                    this.RaisePropertyChanged("IDPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Reference {
            get {
                return this.ID_ReferenceField;
            }
            set {
                if ((this.ID_ReferenceField.Equals(value) != true)) {
                    this.ID_ReferenceField = value;
                    this.RaisePropertyChanged("ID_Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventData", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Nostralogia2._1.NostraDataServ.WorldEventData))]
    public partial class EventData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDEventKindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_contributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaceEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceEventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AcessLevel {
            get {
                return this.AcessLevelField;
            }
            set {
                if ((this.AcessLevelField.Equals(value) != true)) {
                    this.AcessLevelField = value;
                    this.RaisePropertyChanged("AcessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Authenticity {
            get {
                return this.AuthenticityField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticityField, value) != true)) {
                    this.AuthenticityField = value;
                    this.RaisePropertyChanged("Authenticity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryDescription {
            get {
                return this.CategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryDescriptionField, value) != true)) {
                    this.CategoryDescriptionField = value;
                    this.RaisePropertyChanged("CategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayFrom {
            get {
                return this.DayFromField;
            }
            set {
                if ((this.DayFromField.Equals(value) != true)) {
                    this.DayFromField = value;
                    this.RaisePropertyChanged("DayFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayTo {
            get {
                return this.DayToField;
            }
            set {
                if ((this.DayToField.Equals(value) != true)) {
                    this.DayToField = value;
                    this.RaisePropertyChanged("DayTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDEvent {
            get {
                return this.IDEventField;
            }
            set {
                if ((this.IDEventField.Equals(value) != true)) {
                    this.IDEventField = value;
                    this.RaisePropertyChanged("IDEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDEventKind {
            get {
                return this.IDEventKindField;
            }
            set {
                if ((this.IDEventKindField.Equals(value) != true)) {
                    this.IDEventKindField = value;
                    this.RaisePropertyChanged("IDEventKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDPerson {
            get {
                return this.IDPersonField;
            }
            set {
                if ((this.IDPersonField.Equals(value) != true)) {
                    this.IDPersonField = value;
                    this.RaisePropertyChanged("IDPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDSource {
            get {
                return this.IDSourceField;
            }
            set {
                if ((this.IDSourceField.Equals(value) != true)) {
                    this.IDSourceField = value;
                    this.RaisePropertyChanged("IDSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_contributor {
            get {
                return this.ID_contributorField;
            }
            set {
                if ((this.ID_contributorField.Equals(value) != true)) {
                    this.ID_contributorField = value;
                    this.RaisePropertyChanged("ID_contributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonthFrom {
            get {
                return this.MonthFromField;
            }
            set {
                if ((this.MonthFromField.Equals(value) != true)) {
                    this.MonthFromField = value;
                    this.RaisePropertyChanged("MonthFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonthTo {
            get {
                return this.MonthToField;
            }
            set {
                if ((this.MonthToField.Equals(value) != true)) {
                    this.MonthToField = value;
                    this.RaisePropertyChanged("MonthTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaceEvent {
            get {
                return this.PlaceEventField;
            }
            set {
                if ((this.PlaceEventField.Equals(value) != true)) {
                    this.PlaceEventField = value;
                    this.RaisePropertyChanged("PlaceEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaceEventName {
            get {
                return this.PlaceEventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceEventNameField, value) != true)) {
                    this.PlaceEventNameField = value;
                    this.RaisePropertyChanged("PlaceEventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceDescription {
            get {
                return this.SourceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceDescriptionField, value) != true)) {
                    this.SourceDescriptionField = value;
                    this.RaisePropertyChanged("SourceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearFrom {
            get {
                return this.YearFromField;
            }
            set {
                if ((this.YearFromField.Equals(value) != true)) {
                    this.YearFromField = value;
                    this.RaisePropertyChanged("YearFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearTo {
            get {
                return this.YearToField;
            }
            set {
                if ((this.YearToField.Equals(value) != true)) {
                    this.YearToField = value;
                    this.RaisePropertyChanged("YearTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorldEventData", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class WorldEventData : Nostralogia2._1.NostraDataServ.EventData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScaleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScaleID {
            get {
                return this.ScaleIDField;
            }
            set {
                if ((this.ScaleIDField.Equals(value) != true)) {
                    this.ScaleIDField = value;
                    this.RaisePropertyChanged("ScaleID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalRecordBase", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Nostralogia2._1.NostraDataServ.Relative))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Nostralogia2._1.NostraDataServ.DisplayPersonalRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Nostralogia2._1.NostraDataServ.PersonalRecord))]
    public partial class PersonalRecordBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Additional_hoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SMGeoDataContracts.CityData BirthPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_Hour_FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_Hour_ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_Min_FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_Min_ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_MonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_Sec_FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_Sec_ToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Birth_YearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string First_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_contributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Second_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Additional_hours {
            get {
                return this.Additional_hoursField;
            }
            set {
                if ((this.Additional_hoursField.Equals(value) != true)) {
                    this.Additional_hoursField = value;
                    this.RaisePropertyChanged("Additional_hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMGeoDataContracts.CityData BirthPlace {
            get {
                return this.BirthPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthPlaceField, value) != true)) {
                    this.BirthPlaceField = value;
                    this.RaisePropertyChanged("BirthPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Day {
            get {
                return this.Birth_DayField;
            }
            set {
                if ((this.Birth_DayField.Equals(value) != true)) {
                    this.Birth_DayField = value;
                    this.RaisePropertyChanged("Birth_Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Hour_From {
            get {
                return this.Birth_Hour_FromField;
            }
            set {
                if ((this.Birth_Hour_FromField.Equals(value) != true)) {
                    this.Birth_Hour_FromField = value;
                    this.RaisePropertyChanged("Birth_Hour_From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Hour_To {
            get {
                return this.Birth_Hour_ToField;
            }
            set {
                if ((this.Birth_Hour_ToField.Equals(value) != true)) {
                    this.Birth_Hour_ToField = value;
                    this.RaisePropertyChanged("Birth_Hour_To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Min_From {
            get {
                return this.Birth_Min_FromField;
            }
            set {
                if ((this.Birth_Min_FromField.Equals(value) != true)) {
                    this.Birth_Min_FromField = value;
                    this.RaisePropertyChanged("Birth_Min_From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Min_To {
            get {
                return this.Birth_Min_ToField;
            }
            set {
                if ((this.Birth_Min_ToField.Equals(value) != true)) {
                    this.Birth_Min_ToField = value;
                    this.RaisePropertyChanged("Birth_Min_To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Month {
            get {
                return this.Birth_MonthField;
            }
            set {
                if ((this.Birth_MonthField.Equals(value) != true)) {
                    this.Birth_MonthField = value;
                    this.RaisePropertyChanged("Birth_Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Sec_From {
            get {
                return this.Birth_Sec_FromField;
            }
            set {
                if ((this.Birth_Sec_FromField.Equals(value) != true)) {
                    this.Birth_Sec_FromField = value;
                    this.RaisePropertyChanged("Birth_Sec_From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Sec_To {
            get {
                return this.Birth_Sec_ToField;
            }
            set {
                if ((this.Birth_Sec_ToField.Equals(value) != true)) {
                    this.Birth_Sec_ToField = value;
                    this.RaisePropertyChanged("Birth_Sec_To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birth_Year {
            get {
                return this.Birth_YearField;
            }
            set {
                if ((this.Birth_YearField.Equals(value) != true)) {
                    this.Birth_YearField = value;
                    this.RaisePropertyChanged("Birth_Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_Name {
            get {
                return this.First_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_NameField, value) != true)) {
                    this.First_NameField = value;
                    this.RaisePropertyChanged("First_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_contributor {
            get {
                return this.ID_contributorField;
            }
            set {
                if ((this.ID_contributorField.Equals(value) != true)) {
                    this.ID_contributorField = value;
                    this.RaisePropertyChanged("ID_contributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Second_Name {
            get {
                return this.Second_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Second_NameField, value) != true)) {
                    this.Second_NameField = value;
                    this.RaisePropertyChanged("Second_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Relative", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Relative : Nostralogia2._1.NostraDataServ.PersonalRecordBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Description_RelationshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDRelationshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_RelativeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description_Relationship {
            get {
                return this.Description_RelationshipField;
            }
            set {
                if ((object.ReferenceEquals(this.Description_RelationshipField, value) != true)) {
                    this.Description_RelationshipField = value;
                    this.RaisePropertyChanged("Description_Relationship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDRelationship {
            get {
                return this.IDRelationshipField;
            }
            set {
                if ((this.IDRelationshipField.Equals(value) != true)) {
                    this.IDRelationshipField = value;
                    this.RaisePropertyChanged("IDRelationship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Relative {
            get {
                return this.ID_RelativeField;
            }
            set {
                if ((this.ID_RelativeField.Equals(value) != true)) {
                    this.ID_RelativeField = value;
                    this.RaisePropertyChanged("ID_Relative");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayPersonalRecord", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class DisplayPersonalRecord : Nostralogia2._1.NostraDataServ.PersonalRecordBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataType_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataType_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumKWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumPicturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Sex_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceBirthTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType_Description {
            get {
                return this.DataType_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DataType_DescriptionField, value) != true)) {
                    this.DataType_DescriptionField = value;
                    this.RaisePropertyChanged("DataType_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType_Name {
            get {
                return this.DataType_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataType_NameField, value) != true)) {
                    this.DataType_NameField = value;
                    this.RaisePropertyChanged("DataType_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAvailable {
            get {
                return this.IsAvailableField;
            }
            set {
                if ((this.IsAvailableField.Equals(value) != true)) {
                    this.IsAvailableField = value;
                    this.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumEvents {
            get {
                return this.NumEventsField;
            }
            set {
                if ((this.NumEventsField.Equals(value) != true)) {
                    this.NumEventsField = value;
                    this.RaisePropertyChanged("NumEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumKW {
            get {
                return this.NumKWField;
            }
            set {
                if ((this.NumKWField.Equals(value) != true)) {
                    this.NumKWField = value;
                    this.RaisePropertyChanged("NumKW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumPictures {
            get {
                return this.NumPicturesField;
            }
            set {
                if ((this.NumPicturesField.Equals(value) != true)) {
                    this.NumPicturesField = value;
                    this.RaisePropertyChanged("NumPictures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex_Description {
            get {
                return this.Sex_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Sex_DescriptionField, value) != true)) {
                    this.Sex_DescriptionField = value;
                    this.RaisePropertyChanged("Sex_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceBirthTime {
            get {
                return this.SourceBirthTimeField;
            }
            set {
                if ((this.SourceBirthTimeField.Equals(value) != true)) {
                    this.SourceBirthTimeField = value;
                    this.RaisePropertyChanged("SourceBirthTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalRecord", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class PersonalRecord : Nostralogia2._1.NostraDataServ.PersonalRecordBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataType_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataType_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Nostralogia2._1.NostraDataServ.EventData[] EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Nostralogia2._1.NostraDataServ.KeyWord[] KeyWordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Nostralogia2._1.NostraDataServ.PersonalNote[] NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Nostralogia2._1.NostraDataServ.PicturesData[] PicturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Nostralogia2._1.NostraDataServ.Relative[] RelativesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Sex_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceBirthTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType_Description {
            get {
                return this.DataType_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DataType_DescriptionField, value) != true)) {
                    this.DataType_DescriptionField = value;
                    this.RaisePropertyChanged("DataType_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType_Name {
            get {
                return this.DataType_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataType_NameField, value) != true)) {
                    this.DataType_NameField = value;
                    this.RaisePropertyChanged("DataType_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Nostralogia2._1.NostraDataServ.EventData[] Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAvailable {
            get {
                return this.IsAvailableField;
            }
            set {
                if ((this.IsAvailableField.Equals(value) != true)) {
                    this.IsAvailableField = value;
                    this.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Nostralogia2._1.NostraDataServ.KeyWord[] KeyWords {
            get {
                return this.KeyWordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyWordsField, value) != true)) {
                    this.KeyWordsField = value;
                    this.RaisePropertyChanged("KeyWords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Nostralogia2._1.NostraDataServ.PersonalNote[] Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Nostralogia2._1.NostraDataServ.PicturesData[] Pictures {
            get {
                return this.PicturesField;
            }
            set {
                if ((object.ReferenceEquals(this.PicturesField, value) != true)) {
                    this.PicturesField = value;
                    this.RaisePropertyChanged("Pictures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Nostralogia2._1.NostraDataServ.Relative[] Relatives {
            get {
                return this.RelativesField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativesField, value) != true)) {
                    this.RelativesField = value;
                    this.RaisePropertyChanged("Relatives");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex_Description {
            get {
                return this.Sex_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Sex_DescriptionField, value) != true)) {
                    this.Sex_DescriptionField = value;
                    this.RaisePropertyChanged("Sex_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceBirthTime {
            get {
                return this.SourceBirthTimeField;
            }
            set {
                if ((this.SourceBirthTimeField.Equals(value) != true)) {
                    this.SourceBirthTimeField = value;
                    this.RaisePropertyChanged("SourceBirthTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalNote", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class PersonalNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_ContributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreation {
            get {
                return this.DateCreationField;
            }
            set {
                if ((this.DateCreationField.Equals(value) != true)) {
                    this.DateCreationField = value;
                    this.RaisePropertyChanged("DateCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Contributor {
            get {
                return this.ID_ContributorField;
            }
            set {
                if ((this.ID_ContributorField.Equals(value) != true)) {
                    this.ID_ContributorField = value;
                    this.RaisePropertyChanged("ID_Contributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoricalEvent", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class HistoricalEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Comment_sourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContributorsCountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DamageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Nostralogia2._1.NostraDataServ.KeyWord[] EventKeywordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventPlaceDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventScaleValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_Day_fromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_Day_toField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_H_fromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_H_toField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_M_fromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_M_toField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_Month_fromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_Month_toField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_Year_fromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Events_Year_toField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HistScaleValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDHistScaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_ScaleEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_contributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImpactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImpactDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Impact_related_sectorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PagePlaceDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Potential_severityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Survivers_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Wictims_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string comment_eventField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment_source {
            get {
                return this.Comment_sourceField;
            }
            set {
                if ((object.ReferenceEquals(this.Comment_sourceField, value) != true)) {
                    this.Comment_sourceField = value;
                    this.RaisePropertyChanged("Comment_source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContributorsCountryID {
            get {
                return this.ContributorsCountryIDField;
            }
            set {
                if ((this.ContributorsCountryIDField.Equals(value) != true)) {
                    this.ContributorsCountryIDField = value;
                    this.RaisePropertyChanged("ContributorsCountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Damage {
            get {
                return this.DamageField;
            }
            set {
                if ((this.DamageField.Equals(value) != true)) {
                    this.DamageField = value;
                    this.RaisePropertyChanged("Damage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataTypeDetails {
            get {
                return this.DataTypeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeDetailsField, value) != true)) {
                    this.DataTypeDetailsField = value;
                    this.RaisePropertyChanged("DataTypeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataTypeName {
            get {
                return this.DataTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeNameField, value) != true)) {
                    this.DataTypeNameField = value;
                    this.RaisePropertyChanged("DataTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Nostralogia2._1.NostraDataServ.KeyWord[] EventKeywords {
            get {
                return this.EventKeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventKeywordsField, value) != true)) {
                    this.EventKeywordsField = value;
                    this.RaisePropertyChanged("EventKeywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventPlaceData {
            get {
                return this.EventPlaceDataField;
            }
            set {
                if ((object.ReferenceEquals(this.EventPlaceDataField, value) != true)) {
                    this.EventPlaceDataField = value;
                    this.RaisePropertyChanged("EventPlaceData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventScaleValue {
            get {
                return this.EventScaleValueField;
            }
            set {
                if ((this.EventScaleValueField.Equals(value) != true)) {
                    this.EventScaleValueField = value;
                    this.RaisePropertyChanged("EventScaleValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_Day_from {
            get {
                return this.Events_Day_fromField;
            }
            set {
                if ((this.Events_Day_fromField.Equals(value) != true)) {
                    this.Events_Day_fromField = value;
                    this.RaisePropertyChanged("Events_Day_from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_Day_to {
            get {
                return this.Events_Day_toField;
            }
            set {
                if ((this.Events_Day_toField.Equals(value) != true)) {
                    this.Events_Day_toField = value;
                    this.RaisePropertyChanged("Events_Day_to");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_H_from {
            get {
                return this.Events_H_fromField;
            }
            set {
                if ((this.Events_H_fromField.Equals(value) != true)) {
                    this.Events_H_fromField = value;
                    this.RaisePropertyChanged("Events_H_from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_H_to {
            get {
                return this.Events_H_toField;
            }
            set {
                if ((this.Events_H_toField.Equals(value) != true)) {
                    this.Events_H_toField = value;
                    this.RaisePropertyChanged("Events_H_to");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_M_from {
            get {
                return this.Events_M_fromField;
            }
            set {
                if ((this.Events_M_fromField.Equals(value) != true)) {
                    this.Events_M_fromField = value;
                    this.RaisePropertyChanged("Events_M_from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_M_to {
            get {
                return this.Events_M_toField;
            }
            set {
                if ((this.Events_M_toField.Equals(value) != true)) {
                    this.Events_M_toField = value;
                    this.RaisePropertyChanged("Events_M_to");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_Month_from {
            get {
                return this.Events_Month_fromField;
            }
            set {
                if ((this.Events_Month_fromField.Equals(value) != true)) {
                    this.Events_Month_fromField = value;
                    this.RaisePropertyChanged("Events_Month_from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_Month_to {
            get {
                return this.Events_Month_toField;
            }
            set {
                if ((this.Events_Month_toField.Equals(value) != true)) {
                    this.Events_Month_toField = value;
                    this.RaisePropertyChanged("Events_Month_to");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_Year_from {
            get {
                return this.Events_Year_fromField;
            }
            set {
                if ((this.Events_Year_fromField.Equals(value) != true)) {
                    this.Events_Year_fromField = value;
                    this.RaisePropertyChanged("Events_Year_from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Events_Year_to {
            get {
                return this.Events_Year_toField;
            }
            set {
                if ((this.Events_Year_toField.Equals(value) != true)) {
                    this.Events_Year_toField = value;
                    this.RaisePropertyChanged("Events_Year_to");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HistScaleValue {
            get {
                return this.HistScaleValueField;
            }
            set {
                if ((this.HistScaleValueField.Equals(value) != true)) {
                    this.HistScaleValueField = value;
                    this.RaisePropertyChanged("HistScaleValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDHistScale {
            get {
                return this.IDHistScaleField;
            }
            set {
                if ((this.IDHistScaleField.Equals(value) != true)) {
                    this.IDHistScaleField = value;
                    this.RaisePropertyChanged("IDHistScale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_ScaleEvent {
            get {
                return this.ID_ScaleEventField;
            }
            set {
                if ((this.ID_ScaleEventField.Equals(value) != true)) {
                    this.ID_ScaleEventField = value;
                    this.RaisePropertyChanged("ID_ScaleEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_contributor {
            get {
                return this.ID_contributorField;
            }
            set {
                if ((this.ID_contributorField.Equals(value) != true)) {
                    this.ID_contributorField = value;
                    this.RaisePropertyChanged("ID_contributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Impact {
            get {
                return this.ImpactField;
            }
            set {
                if ((object.ReferenceEquals(this.ImpactField, value) != true)) {
                    this.ImpactField = value;
                    this.RaisePropertyChanged("Impact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImpactDetails {
            get {
                return this.ImpactDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ImpactDetailsField, value) != true)) {
                    this.ImpactDetailsField = value;
                    this.RaisePropertyChanged("ImpactDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Impact_related_sectors {
            get {
                return this.Impact_related_sectorsField;
            }
            set {
                if ((this.Impact_related_sectorsField.Equals(value) != true)) {
                    this.Impact_related_sectorsField = value;
                    this.RaisePropertyChanged("Impact_related_sectors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PagePlaceDataID {
            get {
                return this.PagePlaceDataIDField;
            }
            set {
                if ((this.PagePlaceDataIDField.Equals(value) != true)) {
                    this.PagePlaceDataIDField = value;
                    this.RaisePropertyChanged("PagePlaceDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Potential_severity {
            get {
                return this.Potential_severityField;
            }
            set {
                if ((this.Potential_severityField.Equals(value) != true)) {
                    this.Potential_severityField = value;
                    this.RaisePropertyChanged("Potential_severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceRating {
            get {
                return this.SourceRatingField;
            }
            set {
                if ((this.SourceRatingField.Equals(value) != true)) {
                    this.SourceRatingField = value;
                    this.RaisePropertyChanged("SourceRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Survivers_number {
            get {
                return this.Survivers_numberField;
            }
            set {
                if ((this.Survivers_numberField.Equals(value) != true)) {
                    this.Survivers_numberField = value;
                    this.RaisePropertyChanged("Survivers_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wictims_number {
            get {
                return this.Wictims_numberField;
            }
            set {
                if ((this.Wictims_numberField.Equals(value) != true)) {
                    this.Wictims_numberField = value;
                    this.RaisePropertyChanged("Wictims_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment_event {
            get {
                return this.comment_eventField;
            }
            set {
                if ((object.ReferenceEquals(this.comment_eventField, value) != true)) {
                    this.comment_eventField = value;
                    this.RaisePropertyChanged("comment_event");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BirthTimeSource", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class BirthTimeSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceDescription_CommentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDSource {
            get {
                return this.IDSourceField;
            }
            set {
                if ((this.IDSourceField.Equals(value) != true)) {
                    this.IDSourceField = value;
                    this.RaisePropertyChanged("IDSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceDescription {
            get {
                return this.SourceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceDescriptionField, value) != true)) {
                    this.SourceDescriptionField = value;
                    this.RaisePropertyChanged("SourceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceDescription_Comments {
            get {
                return this.SourceDescription_CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceDescription_CommentsField, value) != true)) {
                    this.SourceDescription_CommentsField = value;
                    this.RaisePropertyChanged("SourceDescription_Comments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class DataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescription_FullField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDType {
            get {
                return this.IDTypeField;
            }
            set {
                if ((this.IDTypeField.Equals(value) != true)) {
                    this.IDTypeField = value;
                    this.RaisePropertyChanged("IDType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription_Full {
            get {
                return this.TypeDescription_FullField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescription_FullField, value) != true)) {
                    this.TypeDescription_FullField = value;
                    this.RaisePropertyChanged("TypeDescription_Full");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SexData", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class SexData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SexIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SexDescription {
            get {
                return this.SexDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SexDescriptionField, value) != true)) {
                    this.SexDescriptionField = value;
                    this.RaisePropertyChanged("SexDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SexID {
            get {
                return this.SexIDField;
            }
            set {
                if ((this.SexIDField.Equals(value) != true)) {
                    this.SexIDField = value;
                    this.RaisePropertyChanged("SexID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeShiftData", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TimeShiftData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDTimeshiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Shift_ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeshiftDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDTimeshift {
            get {
                return this.IDTimeshiftField;
            }
            set {
                if ((this.IDTimeshiftField.Equals(value) != true)) {
                    this.IDTimeshiftField = value;
                    this.RaisePropertyChanged("IDTimeshift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Shift_Value {
            get {
                return this.Shift_ValueField;
            }
            set {
                if ((this.Shift_ValueField.Equals(value) != true)) {
                    this.Shift_ValueField = value;
                    this.RaisePropertyChanged("Shift_Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeshiftDescription {
            get {
                return this.TimeshiftDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeshiftDescriptionField, value) != true)) {
                    this.TimeshiftDescriptionField = value;
                    this.RaisePropertyChanged("TimeshiftDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NostraDataServ.INostraDataServ")]
    public interface INostraDataServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/IsAlive", ReplyAction="http://tempuri.org/INostraDataServ/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/IsAlive", ReplyAction="http://tempuri.org/INostraDataServ/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalKeyWords", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalKeyWordsResponse")]
        Nostralogia2._1.NostraDataServ.KeyWord[] GetPersonalKeyWords(int IDPerson, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalKeyWords", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalKeyWordsResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.KeyWord[]> GetPersonalKeyWordsAsync(int IDPerson, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalEventsByCategory", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalEventsByCategoryResponse")]
        Nostralogia2._1.NostraDataServ.ListItemLocalized[] GetPersonalEventsByCategory(int IDCategory, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalEventsByCategory", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalEventsByCategoryResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.ListItemLocalized[]> GetPersonalEventsByCategoryAsync(int IDCategory, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalEventsCategories", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalEventsCategoriesResponse")]
        Nostralogia2._1.NostraDataServ.ListItemLocalized[] GetPersonalEventsCategories(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalEventsCategories", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalEventsCategoriesResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.ListItemLocalized[]> GetPersonalEventsCategoriesAsync(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalPictures", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalPicturesResponse")]
        Nostralogia2._1.NostraDataServ.PicturesData[] GetPersonalPictures(int idRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalPictures", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalPicturesResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.PicturesData[]> GetPersonalPicturesAsync(int idRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalEvents", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalEventsResponse")]
        Nostralogia2._1.NostraDataServ.EventData[] GetPersonalEvents(int idRef, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalEvents", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalEventsResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.EventData[]> GetPersonalEventsAsync(int idRef, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalEvent", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalEventResponse")]
        Nostralogia2._1.NostraDataServ.EventData GetPersonalEvent(int IDEvent, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalEvent", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalEventResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.EventData> GetPersonalEventAsync(int IDEvent, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalData", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalDataResponse")]
        Nostralogia2._1.NostraDataServ.PersonalRecord GetPersonalData(int ID, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetPersonalData", ReplyAction="http://tempuri.org/INostraDataServ/GetPersonalDataResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.PersonalRecord> GetPersonalDataAsync(int ID, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetLastPersonalDataCollection", ReplyAction="http://tempuri.org/INostraDataServ/GetLastPersonalDataCollectionResponse")]
        Nostralogia2._1.NostraDataServ.DisplayPersonalRecord[] GetLastPersonalDataCollection(int iNumberLastRecords, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetLastPersonalDataCollection", ReplyAction="http://tempuri.org/INostraDataServ/GetLastPersonalDataCollectionResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.DisplayPersonalRecord[]> GetLastPersonalDataCollectionAsync(int iNumberLastRecords, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetLastHistoricalDataCollection", ReplyAction="http://tempuri.org/INostraDataServ/GetLastHistoricalDataCollectionResponse")]
        Nostralogia2._1.NostraDataServ.HistoricalEvent[] GetLastHistoricalDataCollection(int iNumberLastRecords, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetLastHistoricalDataCollection", ReplyAction="http://tempuri.org/INostraDataServ/GetLastHistoricalDataCollectionResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.HistoricalEvent[]> GetLastHistoricalDataCollectionAsync(int iNumberLastRecords, int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetBirthTimeSources", ReplyAction="http://tempuri.org/INostraDataServ/GetBirthTimeSourcesResponse")]
        Nostralogia2._1.NostraDataServ.BirthTimeSource[] GetBirthTimeSources(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetBirthTimeSources", ReplyAction="http://tempuri.org/INostraDataServ/GetBirthTimeSourcesResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.BirthTimeSource[]> GetBirthTimeSourcesAsync(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetDataTypes", ReplyAction="http://tempuri.org/INostraDataServ/GetDataTypesResponse")]
        Nostralogia2._1.NostraDataServ.DataType[] GetDataTypes(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetDataTypes", ReplyAction="http://tempuri.org/INostraDataServ/GetDataTypesResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.DataType[]> GetDataTypesAsync(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetSexData", ReplyAction="http://tempuri.org/INostraDataServ/GetSexDataResponse")]
        Nostralogia2._1.NostraDataServ.SexData[] GetSexData(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetSexData", ReplyAction="http://tempuri.org/INostraDataServ/GetSexDataResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.SexData[]> GetSexDataAsync(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetTimeshifts", ReplyAction="http://tempuri.org/INostraDataServ/GetTimeshiftsResponse")]
        Nostralogia2._1.NostraDataServ.TimeShiftData[] GetTimeshifts(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetTimeshifts", ReplyAction="http://tempuri.org/INostraDataServ/GetTimeshiftsResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.TimeShiftData[]> GetTimeshiftsAsync(int iLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetKeyWords", ReplyAction="http://tempuri.org/INostraDataServ/GetKeyWordsResponse")]
        Nostralogia2._1.NostraDataServ.KeyWord[] GetKeyWords(int idRef, int AccessLevel, int iLang, string schema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetKeyWords", ReplyAction="http://tempuri.org/INostraDataServ/GetKeyWordsResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.KeyWord[]> GetKeyWordsAsync(int idRef, int AccessLevel, int iLang, string schema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetDrillUpListKeyWords", ReplyAction="http://tempuri.org/INostraDataServ/GetDrillUpListKeyWordsResponse")]
        Nostralogia2._1.NostraDataServ.KeyWord[] GetDrillUpListKeyWords(int idKW, int AccessLevel, int iLang, string schema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetDrillUpListKeyWords", ReplyAction="http://tempuri.org/INostraDataServ/GetDrillUpListKeyWordsResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.KeyWord[]> GetDrillUpListKeyWordsAsync(int idKW, int AccessLevel, int iLang, string schema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetDrillDownListKeyWords", ReplyAction="http://tempuri.org/INostraDataServ/GetDrillDownListKeyWordsResponse")]
        Nostralogia2._1.NostraDataServ.KeyWord[] GetDrillDownListKeyWords(int idKW, int AccessLevel, int iLang, string schema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetDrillDownListKeyWords", ReplyAction="http://tempuri.org/INostraDataServ/GetDrillDownListKeyWordsResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.KeyWord[]> GetDrillDownListKeyWordsAsync(int idKW, int AccessLevel, int iLang, string schema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetWorldEventList", ReplyAction="http://tempuri.org/INostraDataServ/GetWorldEventListResponse")]
        Nostralogia2._1.NostraDataServ.PersonalRecord GetWorldEventList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetWorldEventList", ReplyAction="http://tempuri.org/INostraDataServ/GetWorldEventListResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.PersonalRecord> GetWorldEventListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetRelatives", ReplyAction="http://tempuri.org/INostraDataServ/GetRelativesResponse")]
        Nostralogia2._1.NostraDataServ.Relative[] GetRelatives(int IDPerson, int IDLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/GetRelatives", ReplyAction="http://tempuri.org/INostraDataServ/GetRelativesResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.Relative[]> GetRelativesAsync(int IDPerson, int IDLang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AssociateUserAndPersonaldata", ReplyAction="http://tempuri.org/INostraDataServ/AssociateUserAndPersonaldataResponse")]
        SMDataContracts.ErrorContainer[] AssociateUserAndPersonaldata(int userid, int personalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AssociateUserAndPersonaldata", ReplyAction="http://tempuri.org/INostraDataServ/AssociateUserAndPersonaldataResponse")]
        System.Threading.Tasks.Task<SMDataContracts.ErrorContainer[]> AssociateUserAndPersonaldataAsync(int userid, int personalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AddPersonalData", ReplyAction="http://tempuri.org/INostraDataServ/AddPersonalDataResponse")]
        int AddPersonalData(Nostralogia2._1.NostraDataServ.PersonalRecord pr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AddPersonalData", ReplyAction="http://tempuri.org/INostraDataServ/AddPersonalDataResponse")]
        System.Threading.Tasks.Task<int> AddPersonalDataAsync(Nostralogia2._1.NostraDataServ.PersonalRecord pr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AddPicture", ReplyAction="http://tempuri.org/INostraDataServ/AddPictureResponse")]
        bool AddPicture(string sFileName, int IDRef, int iSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AddPicture", ReplyAction="http://tempuri.org/INostraDataServ/AddPictureResponse")]
        System.Threading.Tasks.Task<bool> AddPictureAsync(string sFileName, int IDRef, int iSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AddPersonalEvent", ReplyAction="http://tempuri.org/INostraDataServ/AddPersonalEventResponse")]
        int AddPersonalEvent(Nostralogia2._1.NostraDataServ.EventData ed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AddPersonalEvent", ReplyAction="http://tempuri.org/INostraDataServ/AddPersonalEventResponse")]
        System.Threading.Tasks.Task<int> AddPersonalEventAsync(Nostralogia2._1.NostraDataServ.EventData ed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AddRelative", ReplyAction="http://tempuri.org/INostraDataServ/AddRelativeResponse")]
        bool AddRelative(int IDPerson, int IDRelative, int IDRelationship);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/AddRelative", ReplyAction="http://tempuri.org/INostraDataServ/AddRelativeResponse")]
        System.Threading.Tasks.Task<bool> AddRelativeAsync(int IDPerson, int IDRelative, int IDRelationship);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/DeletePersonalEvent", ReplyAction="http://tempuri.org/INostraDataServ/DeletePersonalEventResponse")]
        bool DeletePersonalEvent(int IDEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/DeletePersonalEvent", ReplyAction="http://tempuri.org/INostraDataServ/DeletePersonalEventResponse")]
        System.Threading.Tasks.Task<bool> DeletePersonalEventAsync(int IDEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/DeletePicture", ReplyAction="http://tempuri.org/INostraDataServ/DeletePictureResponse")]
        bool DeletePicture(int idImg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/DeletePicture", ReplyAction="http://tempuri.org/INostraDataServ/DeletePictureResponse")]
        System.Threading.Tasks.Task<bool> DeletePictureAsync(int idImg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/DeletePersonalData", ReplyAction="http://tempuri.org/INostraDataServ/DeletePersonalDataResponse")]
        Nostralogia2._1.NostraDataServ.DeletePersonalDataResponse DeletePersonalData(Nostralogia2._1.NostraDataServ.DeletePersonalDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/DeletePersonalData", ReplyAction="http://tempuri.org/INostraDataServ/DeletePersonalDataResponse")]
        System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.DeletePersonalDataResponse> DeletePersonalDataAsync(Nostralogia2._1.NostraDataServ.DeletePersonalDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/DeleteRelationship", ReplyAction="http://tempuri.org/INostraDataServ/DeleteRelationshipResponse")]
        bool DeleteRelationship(int IDPerson, int IDRelative, int IDRelationship);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/DeleteRelationship", ReplyAction="http://tempuri.org/INostraDataServ/DeleteRelationshipResponse")]
        System.Threading.Tasks.Task<bool> DeleteRelationshipAsync(int IDPerson, int IDRelative, int IDRelationship);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/UpdatePersonalData", ReplyAction="http://tempuri.org/INostraDataServ/UpdatePersonalDataResponse")]
        SMDataContracts.ErrorContainer[] UpdatePersonalData(Nostralogia2._1.NostraDataServ.PersonalRecord pr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/UpdatePersonalData", ReplyAction="http://tempuri.org/INostraDataServ/UpdatePersonalDataResponse")]
        System.Threading.Tasks.Task<SMDataContracts.ErrorContainer[]> UpdatePersonalDataAsync(Nostralogia2._1.NostraDataServ.PersonalRecord pr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/UpdatePersonsKeywords", ReplyAction="http://tempuri.org/INostraDataServ/UpdatePersonsKeywordsResponse")]
        SMDataContracts.ErrorContainer[] UpdatePersonsKeywords(int IDPerson, string lstKW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/UpdatePersonsKeywords", ReplyAction="http://tempuri.org/INostraDataServ/UpdatePersonsKeywordsResponse")]
        System.Threading.Tasks.Task<SMDataContracts.ErrorContainer[]> UpdatePersonsKeywordsAsync(int IDPerson, string lstKW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/UpdatePersonalEvent", ReplyAction="http://tempuri.org/INostraDataServ/UpdatePersonalEventResponse")]
        bool UpdatePersonalEvent(Nostralogia2._1.NostraDataServ.EventData ed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INostraDataServ/UpdatePersonalEvent", ReplyAction="http://tempuri.org/INostraDataServ/UpdatePersonalEventResponse")]
        System.Threading.Tasks.Task<bool> UpdatePersonalEventAsync(Nostralogia2._1.NostraDataServ.EventData ed);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePersonalData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePersonalDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int IDPerson;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool EliminatePhysically;
        
        public DeletePersonalDataRequest() {
        }
        
        public DeletePersonalDataRequest(int IDPerson, bool EliminatePhysically) {
            this.IDPerson = IDPerson;
            this.EliminatePhysically = EliminatePhysically;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePersonalDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePersonalDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SMDataContracts.ErrorContainer[] DeletePersonalDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string PictureFiles;
        
        public DeletePersonalDataResponse() {
        }
        
        public DeletePersonalDataResponse(SMDataContracts.ErrorContainer[] DeletePersonalDataResult, string PictureFiles) {
            this.DeletePersonalDataResult = DeletePersonalDataResult;
            this.PictureFiles = PictureFiles;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INostraDataServChannel : Nostralogia2._1.NostraDataServ.INostraDataServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NostraDataServClient : System.ServiceModel.ClientBase<Nostralogia2._1.NostraDataServ.INostraDataServ>, Nostralogia2._1.NostraDataServ.INostraDataServ {
        
        public NostraDataServClient() {
        }
        
        public NostraDataServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NostraDataServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NostraDataServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NostraDataServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
        
        public Nostralogia2._1.NostraDataServ.KeyWord[] GetPersonalKeyWords(int IDPerson, int iLang) {
            return base.Channel.GetPersonalKeyWords(IDPerson, iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.KeyWord[]> GetPersonalKeyWordsAsync(int IDPerson, int iLang) {
            return base.Channel.GetPersonalKeyWordsAsync(IDPerson, iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.ListItemLocalized[] GetPersonalEventsByCategory(int IDCategory, int iLang) {
            return base.Channel.GetPersonalEventsByCategory(IDCategory, iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.ListItemLocalized[]> GetPersonalEventsByCategoryAsync(int IDCategory, int iLang) {
            return base.Channel.GetPersonalEventsByCategoryAsync(IDCategory, iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.ListItemLocalized[] GetPersonalEventsCategories(int iLang) {
            return base.Channel.GetPersonalEventsCategories(iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.ListItemLocalized[]> GetPersonalEventsCategoriesAsync(int iLang) {
            return base.Channel.GetPersonalEventsCategoriesAsync(iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.PicturesData[] GetPersonalPictures(int idRef) {
            return base.Channel.GetPersonalPictures(idRef);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.PicturesData[]> GetPersonalPicturesAsync(int idRef) {
            return base.Channel.GetPersonalPicturesAsync(idRef);
        }
        
        public Nostralogia2._1.NostraDataServ.EventData[] GetPersonalEvents(int idRef, int iLang) {
            return base.Channel.GetPersonalEvents(idRef, iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.EventData[]> GetPersonalEventsAsync(int idRef, int iLang) {
            return base.Channel.GetPersonalEventsAsync(idRef, iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.EventData GetPersonalEvent(int IDEvent, int iLang) {
            return base.Channel.GetPersonalEvent(IDEvent, iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.EventData> GetPersonalEventAsync(int IDEvent, int iLang) {
            return base.Channel.GetPersonalEventAsync(IDEvent, iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.PersonalRecord GetPersonalData(int ID, int iLang) {
            return base.Channel.GetPersonalData(ID, iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.PersonalRecord> GetPersonalDataAsync(int ID, int iLang) {
            return base.Channel.GetPersonalDataAsync(ID, iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.DisplayPersonalRecord[] GetLastPersonalDataCollection(int iNumberLastRecords, int iLang) {
            return base.Channel.GetLastPersonalDataCollection(iNumberLastRecords, iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.DisplayPersonalRecord[]> GetLastPersonalDataCollectionAsync(int iNumberLastRecords, int iLang) {
            return base.Channel.GetLastPersonalDataCollectionAsync(iNumberLastRecords, iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.HistoricalEvent[] GetLastHistoricalDataCollection(int iNumberLastRecords, int iLang) {
            return base.Channel.GetLastHistoricalDataCollection(iNumberLastRecords, iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.HistoricalEvent[]> GetLastHistoricalDataCollectionAsync(int iNumberLastRecords, int iLang) {
            return base.Channel.GetLastHistoricalDataCollectionAsync(iNumberLastRecords, iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.BirthTimeSource[] GetBirthTimeSources(int iLang) {
            return base.Channel.GetBirthTimeSources(iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.BirthTimeSource[]> GetBirthTimeSourcesAsync(int iLang) {
            return base.Channel.GetBirthTimeSourcesAsync(iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.DataType[] GetDataTypes(int iLang) {
            return base.Channel.GetDataTypes(iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.DataType[]> GetDataTypesAsync(int iLang) {
            return base.Channel.GetDataTypesAsync(iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.SexData[] GetSexData(int iLang) {
            return base.Channel.GetSexData(iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.SexData[]> GetSexDataAsync(int iLang) {
            return base.Channel.GetSexDataAsync(iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.TimeShiftData[] GetTimeshifts(int iLang) {
            return base.Channel.GetTimeshifts(iLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.TimeShiftData[]> GetTimeshiftsAsync(int iLang) {
            return base.Channel.GetTimeshiftsAsync(iLang);
        }
        
        public Nostralogia2._1.NostraDataServ.KeyWord[] GetKeyWords(int idRef, int AccessLevel, int iLang, string schema) {
            return base.Channel.GetKeyWords(idRef, AccessLevel, iLang, schema);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.KeyWord[]> GetKeyWordsAsync(int idRef, int AccessLevel, int iLang, string schema) {
            return base.Channel.GetKeyWordsAsync(idRef, AccessLevel, iLang, schema);
        }
        
        public Nostralogia2._1.NostraDataServ.KeyWord[] GetDrillUpListKeyWords(int idKW, int AccessLevel, int iLang, string schema) {
            return base.Channel.GetDrillUpListKeyWords(idKW, AccessLevel, iLang, schema);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.KeyWord[]> GetDrillUpListKeyWordsAsync(int idKW, int AccessLevel, int iLang, string schema) {
            return base.Channel.GetDrillUpListKeyWordsAsync(idKW, AccessLevel, iLang, schema);
        }
        
        public Nostralogia2._1.NostraDataServ.KeyWord[] GetDrillDownListKeyWords(int idKW, int AccessLevel, int iLang, string schema) {
            return base.Channel.GetDrillDownListKeyWords(idKW, AccessLevel, iLang, schema);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.KeyWord[]> GetDrillDownListKeyWordsAsync(int idKW, int AccessLevel, int iLang, string schema) {
            return base.Channel.GetDrillDownListKeyWordsAsync(idKW, AccessLevel, iLang, schema);
        }
        
        public Nostralogia2._1.NostraDataServ.PersonalRecord GetWorldEventList() {
            return base.Channel.GetWorldEventList();
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.PersonalRecord> GetWorldEventListAsync() {
            return base.Channel.GetWorldEventListAsync();
        }
        
        public Nostralogia2._1.NostraDataServ.Relative[] GetRelatives(int IDPerson, int IDLang) {
            return base.Channel.GetRelatives(IDPerson, IDLang);
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.Relative[]> GetRelativesAsync(int IDPerson, int IDLang) {
            return base.Channel.GetRelativesAsync(IDPerson, IDLang);
        }
        
        public SMDataContracts.ErrorContainer[] AssociateUserAndPersonaldata(int userid, int personalid) {
            return base.Channel.AssociateUserAndPersonaldata(userid, personalid);
        }
        
        public System.Threading.Tasks.Task<SMDataContracts.ErrorContainer[]> AssociateUserAndPersonaldataAsync(int userid, int personalid) {
            return base.Channel.AssociateUserAndPersonaldataAsync(userid, personalid);
        }
        
        public int AddPersonalData(Nostralogia2._1.NostraDataServ.PersonalRecord pr) {
            return base.Channel.AddPersonalData(pr);
        }
        
        public System.Threading.Tasks.Task<int> AddPersonalDataAsync(Nostralogia2._1.NostraDataServ.PersonalRecord pr) {
            return base.Channel.AddPersonalDataAsync(pr);
        }
        
        public bool AddPicture(string sFileName, int IDRef, int iSize) {
            return base.Channel.AddPicture(sFileName, IDRef, iSize);
        }
        
        public System.Threading.Tasks.Task<bool> AddPictureAsync(string sFileName, int IDRef, int iSize) {
            return base.Channel.AddPictureAsync(sFileName, IDRef, iSize);
        }
        
        public int AddPersonalEvent(Nostralogia2._1.NostraDataServ.EventData ed) {
            return base.Channel.AddPersonalEvent(ed);
        }
        
        public System.Threading.Tasks.Task<int> AddPersonalEventAsync(Nostralogia2._1.NostraDataServ.EventData ed) {
            return base.Channel.AddPersonalEventAsync(ed);
        }
        
        public bool AddRelative(int IDPerson, int IDRelative, int IDRelationship) {
            return base.Channel.AddRelative(IDPerson, IDRelative, IDRelationship);
        }
        
        public System.Threading.Tasks.Task<bool> AddRelativeAsync(int IDPerson, int IDRelative, int IDRelationship) {
            return base.Channel.AddRelativeAsync(IDPerson, IDRelative, IDRelationship);
        }
        
        public bool DeletePersonalEvent(int IDEvent) {
            return base.Channel.DeletePersonalEvent(IDEvent);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePersonalEventAsync(int IDEvent) {
            return base.Channel.DeletePersonalEventAsync(IDEvent);
        }
        
        public bool DeletePicture(int idImg) {
            return base.Channel.DeletePicture(idImg);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePictureAsync(int idImg) {
            return base.Channel.DeletePictureAsync(idImg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nostralogia2._1.NostraDataServ.DeletePersonalDataResponse Nostralogia2._1.NostraDataServ.INostraDataServ.DeletePersonalData(Nostralogia2._1.NostraDataServ.DeletePersonalDataRequest request) {
            return base.Channel.DeletePersonalData(request);
        }
        
        public SMDataContracts.ErrorContainer[] DeletePersonalData(int IDPerson, bool EliminatePhysically, out string PictureFiles) {
            Nostralogia2._1.NostraDataServ.DeletePersonalDataRequest inValue = new Nostralogia2._1.NostraDataServ.DeletePersonalDataRequest();
            inValue.IDPerson = IDPerson;
            inValue.EliminatePhysically = EliminatePhysically;
            Nostralogia2._1.NostraDataServ.DeletePersonalDataResponse retVal = ((Nostralogia2._1.NostraDataServ.INostraDataServ)(this)).DeletePersonalData(inValue);
            PictureFiles = retVal.PictureFiles;
            return retVal.DeletePersonalDataResult;
        }
        
        public System.Threading.Tasks.Task<Nostralogia2._1.NostraDataServ.DeletePersonalDataResponse> DeletePersonalDataAsync(Nostralogia2._1.NostraDataServ.DeletePersonalDataRequest request) {
            return base.Channel.DeletePersonalDataAsync(request);
        }
        
        public bool DeleteRelationship(int IDPerson, int IDRelative, int IDRelationship) {
            return base.Channel.DeleteRelationship(IDPerson, IDRelative, IDRelationship);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRelationshipAsync(int IDPerson, int IDRelative, int IDRelationship) {
            return base.Channel.DeleteRelationshipAsync(IDPerson, IDRelative, IDRelationship);
        }
        
        public SMDataContracts.ErrorContainer[] UpdatePersonalData(Nostralogia2._1.NostraDataServ.PersonalRecord pr) {
            return base.Channel.UpdatePersonalData(pr);
        }
        
        public System.Threading.Tasks.Task<SMDataContracts.ErrorContainer[]> UpdatePersonalDataAsync(Nostralogia2._1.NostraDataServ.PersonalRecord pr) {
            return base.Channel.UpdatePersonalDataAsync(pr);
        }
        
        public SMDataContracts.ErrorContainer[] UpdatePersonsKeywords(int IDPerson, string lstKW) {
            return base.Channel.UpdatePersonsKeywords(IDPerson, lstKW);
        }
        
        public System.Threading.Tasks.Task<SMDataContracts.ErrorContainer[]> UpdatePersonsKeywordsAsync(int IDPerson, string lstKW) {
            return base.Channel.UpdatePersonsKeywordsAsync(IDPerson, lstKW);
        }
        
        public bool UpdatePersonalEvent(Nostralogia2._1.NostraDataServ.EventData ed) {
            return base.Channel.UpdatePersonalEvent(ed);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePersonalEventAsync(Nostralogia2._1.NostraDataServ.EventData ed) {
            return base.Channel.UpdatePersonalEventAsync(ed);
        }
    }
}
