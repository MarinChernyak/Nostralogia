//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nostralogia2._1.SMParamKeeper {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SMParamKeeper.ISMParamKeeperServ")]
    public interface ISMParamKeeperServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/GetParam", ReplyAction="http://tempuri.org/ISMParamKeeperServ/GetParamResponse")]
        System.Data.DataSet GetParam(string sParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/GetParam", ReplyAction="http://tempuri.org/ISMParamKeeperServ/GetParamResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetParamAsync(string sParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/SetParam", ReplyAction="http://tempuri.org/ISMParamKeeperServ/SetParamResponse")]
        void SetParam(string sParamName, string sParamVal, string sType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/SetParam", ReplyAction="http://tempuri.org/ISMParamKeeperServ/SetParamResponse")]
        System.Threading.Tasks.Task SetParamAsync(string sParamName, string sParamVal, string sType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/DeleteParam", ReplyAction="http://tempuri.org/ISMParamKeeperServ/DeleteParamResponse")]
        void DeleteParam(string sParamName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/DeleteParam", ReplyAction="http://tempuri.org/ISMParamKeeperServ/DeleteParamResponse")]
        System.Threading.Tasks.Task DeleteParamAsync(string sParamName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/SetSessionKey", ReplyAction="http://tempuri.org/ISMParamKeeperServ/SetSessionKeyResponse")]
        void SetSessionKey(string SessionKey, string salt, string pass, string ExDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/SetSessionKey", ReplyAction="http://tempuri.org/ISMParamKeeperServ/SetSessionKeyResponse")]
        System.Threading.Tasks.Task SetSessionKeyAsync(string SessionKey, string salt, string pass, string ExDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/GetSessionKey", ReplyAction="http://tempuri.org/ISMParamKeeperServ/GetSessionKeyResponse")]
        string[] GetSessionKey(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISMParamKeeperServ/GetSessionKey", ReplyAction="http://tempuri.org/ISMParamKeeperServ/GetSessionKeyResponse")]
        System.Threading.Tasks.Task<string[]> GetSessionKeyAsync(string SessionKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISMParamKeeperServChannel : Nostralogia2._1.SMParamKeeper.ISMParamKeeperServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SMParamKeeperServClient : System.ServiceModel.ClientBase<Nostralogia2._1.SMParamKeeper.ISMParamKeeperServ>, Nostralogia2._1.SMParamKeeper.ISMParamKeeperServ {
        
        public SMParamKeeperServClient() {
        }
        
        public SMParamKeeperServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SMParamKeeperServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SMParamKeeperServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SMParamKeeperServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetParam(string sParam) {
            return base.Channel.GetParam(sParam);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetParamAsync(string sParam) {
            return base.Channel.GetParamAsync(sParam);
        }
        
        public void SetParam(string sParamName, string sParamVal, string sType) {
            base.Channel.SetParam(sParamName, sParamVal, sType);
        }
        
        public System.Threading.Tasks.Task SetParamAsync(string sParamName, string sParamVal, string sType) {
            return base.Channel.SetParamAsync(sParamName, sParamVal, sType);
        }
        
        public void DeleteParam(string sParamName) {
            base.Channel.DeleteParam(sParamName);
        }
        
        public System.Threading.Tasks.Task DeleteParamAsync(string sParamName) {
            return base.Channel.DeleteParamAsync(sParamName);
        }
        
        public void SetSessionKey(string SessionKey, string salt, string pass, string ExDate) {
            base.Channel.SetSessionKey(SessionKey, salt, pass, ExDate);
        }
        
        public System.Threading.Tasks.Task SetSessionKeyAsync(string SessionKey, string salt, string pass, string ExDate) {
            return base.Channel.SetSessionKeyAsync(SessionKey, salt, pass, ExDate);
        }
        
        public string[] GetSessionKey(string SessionKey) {
            return base.Channel.GetSessionKey(SessionKey);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSessionKeyAsync(string SessionKey) {
            return base.Channel.GetSessionKeyAsync(SessionKey);
        }
    }
}
